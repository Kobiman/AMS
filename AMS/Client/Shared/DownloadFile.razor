@inject IJSRuntime JS


<MudTd DataLabel="FileDownload">
    <MudFab StartIcon="@Icons.Material.Filled.ArrowCircleDown" Size="Size.Small" OnClick="@(() => Download(FileName))" />
</MudTd>


@code {
    [Parameter]
    public string FileName { get; set; }

    private async Task Download(string fileName)
    {
        var response = await Http.GetAsync($"/api/FileUpload/DownloadFile/{fileName}");
        if (!response.IsSuccessStatusCode)
        {
            Snackbar.Add("File not found", Severity.Warning);
        }
        else
        {
            try
            {
                var fileStream = response.Content.ReadAsStream();
                using var streamRef = new DotNetStreamReference(stream: fileStream);
                await JS.InvokeVoidAsync("downloadFileFromStream", fileName, streamRef);
            }
            catch (Exception ex)
            {
                await JS.InvokeVoidAsync("alert", ex.Message);
            }
        }
    }
}
