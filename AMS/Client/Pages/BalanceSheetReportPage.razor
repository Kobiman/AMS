@page "/BalanceSheet"
@attribute [Authorize(Roles = "Admin, BalanceSheet")]

<MudText >BALANCE SHEET</MudText><button class="btn btn-secondary" onclick="window.print()">PRINT<i class="fa fa-print"></i></button>
  <div style="margin-top:10px">
    <MudTable Hover="true" Breakpoint="Breakpoint.Sm" Height="500px" FixedHeader="true"
          Items="@Elements"
          GroupBy="@_groupDefinition"
          GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
          GroupFooterClass="mb-4"
          Dense="true">
    <ColGroup>
        <col style="width: 60px;" />
        <col />
        <col />
        <col />
        <col />
        <col />
    </ColGroup>
    <HeaderContent>
        <MudTh>Description</MudTh>
        <MudTh>Amount</MudTh>
    </HeaderContent>
    <GroupHeaderTemplate>
        <MudTh Class="mud-table-cell-custom-group" colspan="5">@($"{context.Key}")</MudTh>
    </GroupHeaderTemplate>
    <RowTemplate>
        <MudTd DataLabel="Description">@context.Description</MudTd>
        <MudTd DataLabel="Amount">@String.Format("{0:0,0.00}",Math.Abs(context.Amount))</MudTd>
    </RowTemplate>
    <GroupFooterTemplate>
        <MudTh></MudTh>
        <MudTh Class="mud-table-cell-custom-group mud-table-cell-custom-group-footer" colspan="5">@($"Total {context.Key}s"): @String.Format("{0:0,0.00}",Math.Abs(context.Items.Sum((e) => e.Amount)))</MudTh>
    </GroupFooterTemplate>
@*    <FooterContent>
        <MudTh></MudTh>
        <MudTh><b>Net Profit/Loss: @($"{Elements.Sum(x=>x.Amount)}")</b></MudTh>
    </FooterContent>*@
</MudTable>
  </div>
@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;
    private string searchString1 = "";
    private string searchString2 = "";
    private AccountDto selectedItem1 = null;
    private AccountDto selectedItem2 = null;
    private HashSet<AccountDto> selectedItems = new HashSet<AccountDto>();
    private IEnumerable<IncomeStatementDto> Elements = new List<IncomeStatementDto>();


    private TableGroupDefinition<IncomeStatementDto> _groupDefinition = new()
        {
            GroupName = "",
            Indentation = false,
            Expandable = true,
            IsInitiallyExpanded = true,
            Selector = (e) => e.AccountType
    };

    protected override async Task OnInitializedAsync()
    {
        var result = await Http.GetFromJsonAsync<IList<IncomeStatementDto>>($"api/Account/GetBalanceSheet/?year={DateTime.Now.Year}");
        if(result is not null)
        {
            Elements = result.OrderBy(x=>x.Code);
        }
        else
        {
            Elements = new List<IncomeStatementDto>();
        }
    }
}
