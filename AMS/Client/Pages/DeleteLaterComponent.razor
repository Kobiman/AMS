@page "/dashboard"

@using System.Text.Json

<h1 class="display-4 text-center text-primary font-weight-bold p-4 bg-light rounded shadow-sm">
    Dashboard
</h1>

<div class="container">
	<div class="row mb-3 bg-light">
        <div class="col-2 pt-2">
            <label class="form-label">Select Period</label>
        </div>
        <div class="col-10">
            <select class="form-select selectpicker" @onchange="PeriodChanged">
                <option value="All">All</option>
                <option value="This Year">This Year</option>
                <option value="This Month">This Month</option>
                <option value="This Week">This Week</option>
                <option value="Today">Today</option>
            </select>
        </div>     
	</div>
</div>

@if(IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/Spinner-3.gif" alt="loading" />

    </div>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="card bg-c-blue order-card">
                    <div class="card-block">
                        <h6 class="m-b-20">Payin</h6>
                        <h2 class="text-right"><i class="fa fa-cart-plus f-left"></i><span>GH<span>&#8373;</span> @Totals.PayIn.ToString("#,###.00")</span></h2>
                        <p></p>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card bg-c-green order-card">
                    <div class="card-block">
                        <h6 class="m-b-20">Payout</h6>
                        <h2 class="text-right"><i class="fa fa-rocket f-left"></i><span>GH<span>&#8373;</span> @Totals.PayOut.ToString("#,###.00")</span></h2>
                        <p></p>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card bg-c-yellow order-card">
                    <div class="card-block">
                        <h6 class="m-b-20">Unpaid Wins</h6>
                        <h2 class="text-right"><span>GH<span>&#8373;</span> @Totals.UnpaidWins.ToString("#,###.00")</span></h2>
                        <p></p>
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-md-6">
                <_BarChartComponent TotalsData="totalsData"
                Width="100%"
                Height="450px"
                Title="Location Financial Overview" />
            </div>
            <div class="col-md-6">
                <_PieChartComponent TotalsData="totalsData"
                ChartType="ChartsType.PayOut"
                Width="100%"
                Height="450px" />
            </div>
        </div>
    </div>

}
@code {
    private DisplayTotals Totals { get; set; } = new();
    private List<DisplayTotals> totalsData = new();
    private bool IsProcessing { get; set; } = true;
    private string SelectedPeriod { get; set; } = "All";

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // {
    //     if (firstRender)
    //     {
    //         var output = await Http.GetFromJsonAsync<DisplayTotals>("api/dashboard");
    //         if (output is not null)
    //         {
    //             Totals = output;
    //         }

    //         await LoadData();

    //     }
    //     StateHasChanged();
    // }
    protected override async Task OnInitializedAsync()
    {
        var output = await Http.GetFromJsonAsync<DisplayTotals>($"api/dashboard/totals/{SelectedPeriod}");
        if (output is not null)
        {
            Totals = output;
        }
        //await Task.Yield();
        await LoadData();
        IsProcessing = false;
    }
    private async Task LoadData() => totalsData = await Http.GetFromJsonAsync<List<DisplayTotals>>($"api/dashboard/ChartValues/{SelectedPeriod}") ?? new List<DisplayTotals>();

    private async Task PeriodChanged(ChangeEventArgs e)
    {
        SelectedPeriod = e.Value?.ToString() ?? "All";
        IsProcessing = true;
        var output = await Http.GetFromJsonAsync<DisplayTotals>($"api/dashboard/totals/{SelectedPeriod}");
        if (output is not null)
        {
            Totals = output;
        }
        totalsData = await Http.GetFromJsonAsync<List<DisplayTotals>>($"api/dashboard/ChartValues/{SelectedPeriod}") ?? new List<DisplayTotals>();
        IsProcessing = false;
        StateHasChanged();
    }
}